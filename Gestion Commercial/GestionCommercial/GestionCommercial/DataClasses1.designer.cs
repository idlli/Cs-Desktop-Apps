#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GestionCommercial
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GestionCommercial")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertArticle(Article instance);
    partial void UpdateArticle(Article instance);
    partial void DeleteArticle(Article instance);
    partial void InsertUtilisateur(Utilisateur instance);
    partial void UpdateUtilisateur(Utilisateur instance);
    partial void DeleteUtilisateur(Utilisateur instance);
    partial void InsertClient(Client instance);
    partial void UpdateClient(Client instance);
    partial void DeleteClient(Client instance);
    partial void InsertCommande(Commande instance);
    partial void UpdateCommande(Commande instance);
    partial void DeleteCommande(Commande instance);
    partial void InsertDetail(Detail instance);
    partial void UpdateDetail(Detail instance);
    partial void DeleteDetail(Detail instance);
    partial void InsertLigneLivraison(LigneLivraison instance);
    partial void UpdateLigneLivraison(LigneLivraison instance);
    partial void DeleteLigneLivraison(LigneLivraison instance);
    partial void InsertLivraison(Livraison instance);
    partial void UpdateLivraison(Livraison instance);
    partial void DeleteLivraison(Livraison instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::GestionCommercial.Properties.Settings.Default.GestionCommercialConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Article> Articles
		{
			get
			{
				return this.GetTable<Article>();
			}
		}
		
		public System.Data.Linq.Table<Utilisateur> Utilisateurs
		{
			get
			{
				return this.GetTable<Utilisateur>();
			}
		}
		
		public System.Data.Linq.Table<Client> Clients
		{
			get
			{
				return this.GetTable<Client>();
			}
		}
		
		public System.Data.Linq.Table<Commande> Commandes
		{
			get
			{
				return this.GetTable<Commande>();
			}
		}
		
		public System.Data.Linq.Table<Detail> Details
		{
			get
			{
				return this.GetTable<Detail>();
			}
		}
		
		public System.Data.Linq.Table<LigneLivraison> LigneLivraisons
		{
			get
			{
				return this.GetTable<LigneLivraison>();
			}
		}
		
		public System.Data.Linq.Table<Livraison> Livraisons
		{
			get
			{
				return this.GetTable<Livraison>();
			}
		}
		
		public System.Data.Linq.Table<BonCommande> BonCommandes
		{
			get
			{
				return this.GetTable<BonCommande>();
			}
		}
		
		public System.Data.Linq.Table<BonLivraison> BonLivraisons
		{
			get
			{
				return this.GetTable<BonLivraison>();
			}
		}
		
		public System.Data.Linq.Table<Facture> Factures
		{
			get
			{
				return this.GetTable<Facture>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Article")]
	public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodeArt;
		
		private string _Desi;
		
		private System.Nullable<decimal> _PU;
		
		private System.Nullable<int> _QDISP;
		
		private EntitySet<Detail> _Details;
		
		private EntitySet<LigneLivraison> _LigneLivraisons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeArtChanging(string value);
    partial void OnCodeArtChanged();
    partial void OnDesiChanging(string value);
    partial void OnDesiChanged();
    partial void OnPUChanging(System.Nullable<decimal> value);
    partial void OnPUChanged();
    partial void OnQDISPChanging(System.Nullable<int> value);
    partial void OnQDISPChanged();
    #endregion
		
		public Article()
		{
			this._Details = new EntitySet<Detail>(new Action<Detail>(this.attach_Details), new Action<Detail>(this.detach_Details));
			this._LigneLivraisons = new EntitySet<LigneLivraison>(new Action<LigneLivraison>(this.attach_LigneLivraisons), new Action<LigneLivraison>(this.detach_LigneLivraisons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeArt", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeArt
		{
			get
			{
				return this._CodeArt;
			}
			set
			{
				if ((this._CodeArt != value))
				{
					this.OnCodeArtChanging(value);
					this.SendPropertyChanging();
					this._CodeArt = value;
					this.SendPropertyChanged("CodeArt");
					this.OnCodeArtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desi", DbType="NVarChar(50)")]
		public string Desi
		{
			get
			{
				return this._Desi;
			}
			set
			{
				if ((this._Desi != value))
				{
					this.OnDesiChanging(value);
					this.SendPropertyChanging();
					this._Desi = value;
					this.SendPropertyChanged("Desi");
					this.OnDesiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PU", DbType="Decimal(6,2)")]
		public System.Nullable<decimal> PU
		{
			get
			{
				return this._PU;
			}
			set
			{
				if ((this._PU != value))
				{
					this.OnPUChanging(value);
					this.SendPropertyChanging();
					this._PU = value;
					this.SendPropertyChanged("PU");
					this.OnPUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QDISP", DbType="Int")]
		public System.Nullable<int> QDISP
		{
			get
			{
				return this._QDISP;
			}
			set
			{
				if ((this._QDISP != value))
				{
					this.OnQDISPChanging(value);
					this.SendPropertyChanging();
					this._QDISP = value;
					this.SendPropertyChanged("QDISP");
					this.OnQDISPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Detail", Storage="_Details", ThisKey="CodeArt", OtherKey="CodeArt")]
		public EntitySet<Detail> Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				this._Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_LigneLivraison", Storage="_LigneLivraisons", ThisKey="CodeArt", OtherKey="CodeArt")]
		public EntitySet<LigneLivraison> LigneLivraisons
		{
			get
			{
				return this._LigneLivraisons;
			}
			set
			{
				this._LigneLivraisons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Details(Detail entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_Details(Detail entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
		
		private void attach_LigneLivraisons(LigneLivraison entity)
		{
			this.SendPropertyChanging();
			entity.Article = this;
		}
		
		private void detach_LigneLivraisons(LigneLivraison entity)
		{
			this.SendPropertyChanging();
			entity.Article = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilisateur")]
	public partial class Utilisateur : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Identity;
		
		private string _Name;
		
		private string _Password;
		
		private string _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdentityChanging(string value);
    partial void OnIdentityChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    #endregion
		
		public Utilisateur()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Identity]", Storage="_Identity", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Identity
		{
			get
			{
				return this._Identity;
			}
			set
			{
				if ((this._Identity != value))
				{
					this.OnIdentityChanging(value);
					this.SendPropertyChanging();
					this._Identity = value;
					this.SendPropertyChanged("Identity");
					this.OnIdentityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(40)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(20)")]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Client")]
	public partial class Client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CodeCl;
		
		private string _Nom;
		
		private string _Ville;
		
		private EntitySet<Commande> _Commandes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeClChanging(string value);
    partial void OnCodeClChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnVilleChanging(string value);
    partial void OnVilleChanged();
    #endregion
		
		public Client()
		{
			this._Commandes = new EntitySet<Commande>(new Action<Commande>(this.attach_Commandes), new Action<Commande>(this.detach_Commandes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeCl", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeCl
		{
			get
			{
				return this._CodeCl;
			}
			set
			{
				if ((this._CodeCl != value))
				{
					this.OnCodeClChanging(value);
					this.SendPropertyChanging();
					this._CodeCl = value;
					this.SendPropertyChanged("CodeCl");
					this.OnCodeClChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ville", DbType="NVarChar(50)")]
		public string Ville
		{
			get
			{
				return this._Ville;
			}
			set
			{
				if ((this._Ville != value))
				{
					this.OnVilleChanging(value);
					this.SendPropertyChanging();
					this._Ville = value;
					this.SendPropertyChanged("Ville");
					this.OnVilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Commande", Storage="_Commandes", ThisKey="CodeCl", OtherKey="CodeCl")]
		public EntitySet<Commande> Commandes
		{
			get
			{
				return this._Commandes;
			}
			set
			{
				this._Commandes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Commandes(Commande entity)
		{
			this.SendPropertyChanging();
			entity.Client = this;
		}
		
		private void detach_Commandes(Commande entity)
		{
			this.SendPropertyChanging();
			entity.Client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Commande")]
	public partial class Commande : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NumCom;
		
		private System.Nullable<System.DateTime> _DateCom;
		
		private string _CodeCl;
		
		private System.Nullable<bool> _NE;
		
		private EntitySet<Detail> _Details;
		
		private EntitySet<Livraison> _Livraisons;
		
		private EntityRef<Client> _Client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumComChanging(string value);
    partial void OnNumComChanged();
    partial void OnDateComChanging(System.Nullable<System.DateTime> value);
    partial void OnDateComChanged();
    partial void OnCodeClChanging(string value);
    partial void OnCodeClChanged();
    partial void OnNEChanging(System.Nullable<bool> value);
    partial void OnNEChanged();
    #endregion
		
		public Commande()
		{
			this._Details = new EntitySet<Detail>(new Action<Detail>(this.attach_Details), new Action<Detail>(this.detach_Details));
			this._Livraisons = new EntitySet<Livraison>(new Action<Livraison>(this.attach_Livraisons), new Action<Livraison>(this.detach_Livraisons));
			this._Client = default(EntityRef<Client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCom", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NumCom
		{
			get
			{
				return this._NumCom;
			}
			set
			{
				if ((this._NumCom != value))
				{
					this.OnNumComChanging(value);
					this.SendPropertyChanging();
					this._NumCom = value;
					this.SendPropertyChanged("NumCom");
					this.OnNumComChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCom", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateCom
		{
			get
			{
				return this._DateCom;
			}
			set
			{
				if ((this._DateCom != value))
				{
					this.OnDateComChanging(value);
					this.SendPropertyChanging();
					this._DateCom = value;
					this.SendPropertyChanged("DateCom");
					this.OnDateComChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeCl", DbType="NVarChar(20)")]
		public string CodeCl
		{
			get
			{
				return this._CodeCl;
			}
			set
			{
				if ((this._CodeCl != value))
				{
					if (this._Client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeClChanging(value);
					this.SendPropertyChanging();
					this._CodeCl = value;
					this.SendPropertyChanged("CodeCl");
					this.OnCodeClChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NE", DbType="Bit")]
		public System.Nullable<bool> NE
		{
			get
			{
				return this._NE;
			}
			set
			{
				if ((this._NE != value))
				{
					this.OnNEChanging(value);
					this.SendPropertyChanging();
					this._NE = value;
					this.SendPropertyChanged("NE");
					this.OnNEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commande_Detail", Storage="_Details", ThisKey="NumCom", OtherKey="NumCom")]
		public EntitySet<Detail> Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				this._Details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commande_Livraison", Storage="_Livraisons", ThisKey="NumCom", OtherKey="NumCom")]
		public EntitySet<Livraison> Livraisons
		{
			get
			{
				return this._Livraisons;
			}
			set
			{
				this._Livraisons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Client_Commande", Storage="_Client", ThisKey="CodeCl", OtherKey="CodeCl", IsForeignKey=true)]
		public Client Client
		{
			get
			{
				return this._Client.Entity;
			}
			set
			{
				Client previousValue = this._Client.Entity;
				if (((previousValue != value) 
							|| (this._Client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Client.Entity = null;
						previousValue.Commandes.Remove(this);
					}
					this._Client.Entity = value;
					if ((value != null))
					{
						value.Commandes.Add(this);
						this._CodeCl = value.CodeCl;
					}
					else
					{
						this._CodeCl = default(string);
					}
					this.SendPropertyChanged("Client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Details(Detail entity)
		{
			this.SendPropertyChanging();
			entity.Commande = this;
		}
		
		private void detach_Details(Detail entity)
		{
			this.SendPropertyChanging();
			entity.Commande = null;
		}
		
		private void attach_Livraisons(Livraison entity)
		{
			this.SendPropertyChanging();
			entity.Commande = this;
		}
		
		private void detach_Livraisons(Livraison entity)
		{
			this.SendPropertyChanging();
			entity.Commande = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Detail")]
	public partial class Detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NumCom;
		
		private string _CodeArt;
		
		private System.Nullable<int> _Qte;
		
		private EntityRef<Article> _Article;
		
		private EntityRef<Commande> _Commande;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumComChanging(string value);
    partial void OnNumComChanged();
    partial void OnCodeArtChanging(string value);
    partial void OnCodeArtChanged();
    partial void OnQteChanging(System.Nullable<int> value);
    partial void OnQteChanged();
    #endregion
		
		public Detail()
		{
			this._Article = default(EntityRef<Article>);
			this._Commande = default(EntityRef<Commande>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCom", DbType="NVarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NumCom
		{
			get
			{
				return this._NumCom;
			}
			set
			{
				if ((this._NumCom != value))
				{
					if (this._Commande.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumComChanging(value);
					this.SendPropertyChanging();
					this._NumCom = value;
					this.SendPropertyChanged("NumCom");
					this.OnNumComChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeArt", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeArt
		{
			get
			{
				return this._CodeArt;
			}
			set
			{
				if ((this._CodeArt != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeArtChanging(value);
					this.SendPropertyChanging();
					this._CodeArt = value;
					this.SendPropertyChanged("CodeArt");
					this.OnCodeArtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qte", DbType="Int")]
		public System.Nullable<int> Qte
		{
			get
			{
				return this._Qte;
			}
			set
			{
				if ((this._Qte != value))
				{
					this.OnQteChanging(value);
					this.SendPropertyChanging();
					this._Qte = value;
					this.SendPropertyChanged("Qte");
					this.OnQteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_Detail", Storage="_Article", ThisKey="CodeArt", OtherKey="CodeArt", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.Details.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.Details.Add(this);
						this._CodeArt = value.CodeArt;
					}
					else
					{
						this._CodeArt = default(string);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commande_Detail", Storage="_Commande", ThisKey="NumCom", OtherKey="NumCom", IsForeignKey=true)]
		public Commande Commande
		{
			get
			{
				return this._Commande.Entity;
			}
			set
			{
				Commande previousValue = this._Commande.Entity;
				if (((previousValue != value) 
							|| (this._Commande.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Commande.Entity = null;
						previousValue.Details.Remove(this);
					}
					this._Commande.Entity = value;
					if ((value != null))
					{
						value.Details.Add(this);
						this._NumCom = value.NumCom;
					}
					else
					{
						this._NumCom = default(string);
					}
					this.SendPropertyChanged("Commande");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LigneLivraison")]
	public partial class LigneLivraison : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NumLiv;
		
		private string _CodeArt;
		
		private System.Nullable<int> _QLiv;
		
		private EntityRef<Article> _Article;
		
		private EntityRef<Livraison> _Livraison;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumLivChanging(string value);
    partial void OnNumLivChanged();
    partial void OnCodeArtChanging(string value);
    partial void OnCodeArtChanged();
    partial void OnQLivChanging(System.Nullable<int> value);
    partial void OnQLivChanged();
    #endregion
		
		public LigneLivraison()
		{
			this._Article = default(EntityRef<Article>);
			this._Livraison = default(EntityRef<Livraison>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumLiv", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NumLiv
		{
			get
			{
				return this._NumLiv;
			}
			set
			{
				if ((this._NumLiv != value))
				{
					if (this._Livraison.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumLivChanging(value);
					this.SendPropertyChanging();
					this._NumLiv = value;
					this.SendPropertyChanged("NumLiv");
					this.OnNumLivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeArt", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CodeArt
		{
			get
			{
				return this._CodeArt;
			}
			set
			{
				if ((this._CodeArt != value))
				{
					if (this._Article.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCodeArtChanging(value);
					this.SendPropertyChanging();
					this._CodeArt = value;
					this.SendPropertyChanged("CodeArt");
					this.OnCodeArtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QLiv", DbType="Int")]
		public System.Nullable<int> QLiv
		{
			get
			{
				return this._QLiv;
			}
			set
			{
				if ((this._QLiv != value))
				{
					this.OnQLivChanging(value);
					this.SendPropertyChanging();
					this._QLiv = value;
					this.SendPropertyChanged("QLiv");
					this.OnQLivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Article_LigneLivraison", Storage="_Article", ThisKey="CodeArt", OtherKey="CodeArt", IsForeignKey=true)]
		public Article Article
		{
			get
			{
				return this._Article.Entity;
			}
			set
			{
				Article previousValue = this._Article.Entity;
				if (((previousValue != value) 
							|| (this._Article.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Article.Entity = null;
						previousValue.LigneLivraisons.Remove(this);
					}
					this._Article.Entity = value;
					if ((value != null))
					{
						value.LigneLivraisons.Add(this);
						this._CodeArt = value.CodeArt;
					}
					else
					{
						this._CodeArt = default(string);
					}
					this.SendPropertyChanged("Article");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livraison_LigneLivraison", Storage="_Livraison", ThisKey="NumLiv", OtherKey="NumLiv", IsForeignKey=true)]
		public Livraison Livraison
		{
			get
			{
				return this._Livraison.Entity;
			}
			set
			{
				Livraison previousValue = this._Livraison.Entity;
				if (((previousValue != value) 
							|| (this._Livraison.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Livraison.Entity = null;
						previousValue.LigneLivraisons.Remove(this);
					}
					this._Livraison.Entity = value;
					if ((value != null))
					{
						value.LigneLivraisons.Add(this);
						this._NumLiv = value.NumLiv;
					}
					else
					{
						this._NumLiv = default(string);
					}
					this.SendPropertyChanged("Livraison");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Livraison")]
	public partial class Livraison : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NumLiv;
		
		private System.Nullable<System.DateTime> _DateLiv;
		
		private string _Livreur;
		
		private System.Nullable<bool> _EtatLiv;
		
		private string _NumCom;
		
		private EntitySet<LigneLivraison> _LigneLivraisons;
		
		private EntityRef<Commande> _Commande;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumLivChanging(string value);
    partial void OnNumLivChanged();
    partial void OnDateLivChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLivChanged();
    partial void OnLivreurChanging(string value);
    partial void OnLivreurChanged();
    partial void OnEtatLivChanging(System.Nullable<bool> value);
    partial void OnEtatLivChanged();
    partial void OnNumComChanging(string value);
    partial void OnNumComChanged();
    #endregion
		
		public Livraison()
		{
			this._LigneLivraisons = new EntitySet<LigneLivraison>(new Action<LigneLivraison>(this.attach_LigneLivraisons), new Action<LigneLivraison>(this.detach_LigneLivraisons));
			this._Commande = default(EntityRef<Commande>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumLiv", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NumLiv
		{
			get
			{
				return this._NumLiv;
			}
			set
			{
				if ((this._NumLiv != value))
				{
					this.OnNumLivChanging(value);
					this.SendPropertyChanging();
					this._NumLiv = value;
					this.SendPropertyChanged("NumLiv");
					this.OnNumLivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLiv", DbType="Date")]
		public System.Nullable<System.DateTime> DateLiv
		{
			get
			{
				return this._DateLiv;
			}
			set
			{
				if ((this._DateLiv != value))
				{
					this.OnDateLivChanging(value);
					this.SendPropertyChanging();
					this._DateLiv = value;
					this.SendPropertyChanged("DateLiv");
					this.OnDateLivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Livreur", DbType="NVarChar(20)")]
		public string Livreur
		{
			get
			{
				return this._Livreur;
			}
			set
			{
				if ((this._Livreur != value))
				{
					this.OnLivreurChanging(value);
					this.SendPropertyChanging();
					this._Livreur = value;
					this.SendPropertyChanged("Livreur");
					this.OnLivreurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EtatLiv", DbType="Bit")]
		public System.Nullable<bool> EtatLiv
		{
			get
			{
				return this._EtatLiv;
			}
			set
			{
				if ((this._EtatLiv != value))
				{
					this.OnEtatLivChanging(value);
					this.SendPropertyChanging();
					this._EtatLiv = value;
					this.SendPropertyChanged("EtatLiv");
					this.OnEtatLivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCom", DbType="NVarChar(20)")]
		public string NumCom
		{
			get
			{
				return this._NumCom;
			}
			set
			{
				if ((this._NumCom != value))
				{
					if (this._Commande.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumComChanging(value);
					this.SendPropertyChanging();
					this._NumCom = value;
					this.SendPropertyChanged("NumCom");
					this.OnNumComChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Livraison_LigneLivraison", Storage="_LigneLivraisons", ThisKey="NumLiv", OtherKey="NumLiv")]
		public EntitySet<LigneLivraison> LigneLivraisons
		{
			get
			{
				return this._LigneLivraisons;
			}
			set
			{
				this._LigneLivraisons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Commande_Livraison", Storage="_Commande", ThisKey="NumCom", OtherKey="NumCom", IsForeignKey=true)]
		public Commande Commande
		{
			get
			{
				return this._Commande.Entity;
			}
			set
			{
				Commande previousValue = this._Commande.Entity;
				if (((previousValue != value) 
							|| (this._Commande.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Commande.Entity = null;
						previousValue.Livraisons.Remove(this);
					}
					this._Commande.Entity = value;
					if ((value != null))
					{
						value.Livraisons.Add(this);
						this._NumCom = value.NumCom;
					}
					else
					{
						this._NumCom = default(string);
					}
					this.SendPropertyChanged("Commande");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LigneLivraisons(LigneLivraison entity)
		{
			this.SendPropertyChanging();
			entity.Livraison = this;
		}
		
		private void detach_LigneLivraisons(LigneLivraison entity)
		{
			this.SendPropertyChanging();
			entity.Livraison = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BonCommande")]
	public partial class BonCommande
	{
		
		private string _NumCom;
		
		private System.DateTime _DateCom;
		
		private string _CodeCl;
		
		private bool _NE;
		
		private string _CodeArt;
		
		private string _Desi;
		
		private decimal _PU;
		
		private int _Qte;
		
		public BonCommande()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCom", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NumCom
		{
			get
			{
				return this._NumCom;
			}
			set
			{
				if ((this._NumCom != value))
				{
					this._NumCom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCom", DbType="DateTime")]
		public System.DateTime DateCom
		{
			get
			{
				return this._DateCom;
			}
			set
			{
				if ((this._DateCom != value))
				{
					this._DateCom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeCl", DbType="NVarChar(20)", CanBeNull=false)]
		public string CodeCl
		{
			get
			{
				return this._CodeCl;
			}
			set
			{
				if ((this._CodeCl != value))
				{
					this._CodeCl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NE", DbType="Bit")]
		public bool NE
		{
			get
			{
				return this._NE;
			}
			set
			{
				if ((this._NE != value))
				{
					this._NE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeArt", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CodeArt
		{
			get
			{
				return this._CodeArt;
			}
			set
			{
				if ((this._CodeArt != value))
				{
					this._CodeArt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desi", DbType="NVarChar(50)", CanBeNull=false)]
		public string Desi
		{
			get
			{
				return this._Desi;
			}
			set
			{
				if ((this._Desi != value))
				{
					this._Desi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PU", DbType="Decimal(6,2)")]
		public decimal PU
		{
			get
			{
				return this._PU;
			}
			set
			{
				if ((this._PU != value))
				{
					this._PU = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qte", DbType="Int")]
		public int Qte
		{
			get
			{
				return this._Qte;
			}
			set
			{
				if ((this._Qte != value))
				{
					this._Qte = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BonLivraison")]
	public partial class BonLivraison
	{
		
		private string _CodeArt;
		
		private string _Desi;
		
		private decimal _PU;
		
		private string _NumLiv;
		
		private System.DateTime _DateLiv;
		
		private string _Livreur;
		
		private bool _EtatLiv;
		
		private string _NumCom;
		
		private int _QLiv;
		
		public BonLivraison()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeArt", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CodeArt
		{
			get
			{
				return this._CodeArt;
			}
			set
			{
				if ((this._CodeArt != value))
				{
					this._CodeArt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desi", DbType="NVarChar(50)", CanBeNull=false)]
		public string Desi
		{
			get
			{
				return this._Desi;
			}
			set
			{
				if ((this._Desi != value))
				{
					this._Desi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PU", DbType="Decimal(6,2)")]
		public decimal PU
		{
			get
			{
				return this._PU;
			}
			set
			{
				if ((this._PU != value))
				{
					this._PU = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumLiv", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NumLiv
		{
			get
			{
				return this._NumLiv;
			}
			set
			{
				if ((this._NumLiv != value))
				{
					this._NumLiv = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLiv", DbType="Date")]
		public System.DateTime DateLiv
		{
			get
			{
				return this._DateLiv;
			}
			set
			{
				if ((this._DateLiv != value))
				{
					this._DateLiv = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Livreur", DbType="NVarChar(20)", CanBeNull=false)]
		public string Livreur
		{
			get
			{
				return this._Livreur;
			}
			set
			{
				if ((this._Livreur != value))
				{
					this._Livreur = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EtatLiv", DbType="Bit")]
		public bool EtatLiv
		{
			get
			{
				return this._EtatLiv;
			}
			set
			{
				if ((this._EtatLiv != value))
				{
					this._EtatLiv = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCom", DbType="NVarChar(20)", CanBeNull=false)]
		public string NumCom
		{
			get
			{
				return this._NumCom;
			}
			set
			{
				if ((this._NumCom != value))
				{
					this._NumCom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QLiv", DbType="Int")]
		public int QLiv
		{
			get
			{
				return this._QLiv;
			}
			set
			{
				if ((this._QLiv != value))
				{
					this._QLiv = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Factures")]
	public partial class Facture
	{
		
		private string _NumCom;
		
		private System.DateTime _DateCom;
		
		private string _CodeCl;
		
		private string _CodeArt;
		
		private string _Desi;
		
		private decimal _PU;
		
		private int _Qte;
		
		private decimal _puQte;
		
		public Facture()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumCom", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string NumCom
		{
			get
			{
				return this._NumCom;
			}
			set
			{
				if ((this._NumCom != value))
				{
					this._NumCom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCom", DbType="DateTime")]
		public System.DateTime DateCom
		{
			get
			{
				return this._DateCom;
			}
			set
			{
				if ((this._DateCom != value))
				{
					this._DateCom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeCl", DbType="NVarChar(20)", CanBeNull=false)]
		public string CodeCl
		{
			get
			{
				return this._CodeCl;
			}
			set
			{
				if ((this._CodeCl != value))
				{
					this._CodeCl = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeArt", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CodeArt
		{
			get
			{
				return this._CodeArt;
			}
			set
			{
				if ((this._CodeArt != value))
				{
					this._CodeArt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Desi", DbType="NVarChar(50)", CanBeNull=false)]
		public string Desi
		{
			get
			{
				return this._Desi;
			}
			set
			{
				if ((this._Desi != value))
				{
					this._Desi = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PU", DbType="Decimal(6,2)")]
		public decimal PU
		{
			get
			{
				return this._PU;
			}
			set
			{
				if ((this._PU != value))
				{
					this._PU = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qte", DbType="Int")]
		public int Qte
		{
			get
			{
				return this._Qte;
			}
			set
			{
				if ((this._Qte != value))
				{
					this._Qte = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_puQte", DbType="Decimal(17,2)")]
		public decimal puQte
		{
			get
			{
				return this._puQte;
			}
			set
			{
				if ((this._puQte != value))
				{
					this._puQte = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
